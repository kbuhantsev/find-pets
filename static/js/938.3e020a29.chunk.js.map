{"version":3,"file":"static/js/938.3e020a29.chunk.js","mappings":"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","sources":["components/Notices/NoticeCard/NoticeCard.jsx","components/Notices/NoticesList/NoticesList.jsx"],"sourcesContent":["import React from 'react';\nimport {\n  Card,\n  CardMedia,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n  Chip,\n  List,\n  ListItem,\n  ListItemText,\n} from '@mui/material';\nimport { useParams } from 'react-router-dom';\n\n// {\n//   \"_id\": \"63fe2ad6f3ffff3515f80757\",\n//   \"title\": \"Вiддам рибок разом з акварiумом\",\n//   \"category\": \"inGoodHands\",\n//    \"petName\": \"рибки\",\n//    \"dateOfBirth\": \"2022-07-22T00:00:00.000Z\",\n//    \"breed\": \"рибки\",\n//    \"sex\": \"female\",\n//    \"location\": \"Чернiвцi, Чернiвцi\",\n//    \"price\": 0,\n//    \"imageUrl\": \"https://res.cloudinary.com/dwwvmul1w/image/upload/v1677601494/pets-project/notices/63fe2ad6f3ffff3515f80757.jpg\",\n//    \"comment\": \"Віддам рибок разом з акваріумом. Розкажу як за ними доглядати.\",\n//    \"age\": {\n//         \"days\": 13,\n//         \"months\": 7,\n//         \"years\": 0\n//   };\n//   ПОЯВЛЯЮТСЯ:\n//\"favorite\": false,\n//\"myads\": true,\n\nconst NoticeCard = ({ notice }) => {\n  let {\n    _id,\n    title,\n    category,\n    age,\n    breed,\n    location,\n    imageUrl,\n    price,\n    favorite,\n    myads,\n  } = notice;\n\n  // С бэкэнда не приходит\n  let { category: currentCategory } = useParams();\n  if (currentCategory === 'my-ads') {\n    myads = true;\n  }\n\n  return (\n    <Card sx={{ maxWidth: 345 }} id={_id}>\n      <CardMedia sx={{ height: 140 }} image={imageUrl} />\n      <Chip label={category} />\n      <Chip label={favorite?.toString()} />\n      <CardContent>\n        <Typography gutterBottom variant=\"subtitle1\" component=\"p\">\n          {title}\n        </Typography>\n        <List>\n          <ListItem>\n            <ListItemText>Breed</ListItemText>\n            <ListItemText>{breed}</ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemText>Place</ListItemText>\n            <ListItemText>{location}</ListItemText>\n          </ListItem>\n          <ListItem>\n            <ListItemText>Age</ListItemText>\n            <ListItemText>\n              {age.years > 0 ? `${age.years} years` : `${age.months} months`}\n            </ListItemText>\n          </ListItem>\n          {price > 0 && (\n            <ListItem>\n              <ListItemText>Price</ListItemText>\n              <ListItemText>{price}</ListItemText>\n            </ListItem>\n          )}\n        </List>\n      </CardContent>\n      <CardActions sx={{ spacing: true }}>\n        {myads && (\n          <Button variant=\"outlined\" size=\"medium\">\n            Delete\n          </Button>\n        )}\n        <Button variant=\"outlined\" size=\"medium\">\n          Learn More\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default NoticeCard;\n","import { Box, CircularProgress } from '@mui/material';\nimport Grid from '@mui/material/Unstable_Grid2';\nimport { useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useGetNoticesByCategoryQuery } from 'redux/notices/noticesApi';\nimport errorImg from '../../../images/errors/puppy.png';\nimport NoticeCard from '../NoticeCard/NoticeCard';\n\nconst NoticesList = () => {\n  let { category } = useParams();\n\n  const getCategory = useCallback(() => {\n    switch (category) {\n      case 'sell':\n        return 'category/sell';\n      case 'lost-found':\n        return 'category/lostFound';\n      case 'in-good-hands':\n        return 'category/inGoodHands';\n      case 'favorite':\n        return 'favorites';\n      case 'my-ads':\n        return 'myNotices';\n      default:\n        return 'sell';\n    }\n  }, [category]);\n\n  const {\n    data: notices = [],\n    error,\n    isFetching,\n  } = useGetNoticesByCategoryQuery(getCategory());\n\n  return (\n    <>\n      {isFetching ? (\n        <Box display=\"flex\" justifyContent=\"center\" marginTop=\"50px\">\n          <CircularProgress color=\"primary\" size={75} />\n        </Box>\n      ) : error ?? notices.length === 0 ? (\n        <img src={errorImg} alt=\"puppy\" width={300} />\n      ) : (\n        notices && (\n          <Box sx={{ flexGrow: 1 }}>\n            <Grid\n              container\n              columns={{ mobile: 1, tablet: 2, laptop: 3, desktop: 4 }}\n              spacing={{ mobile: 1, tablet: 2, laptop: 2, desktop: 3 }}\n            >\n              {notices.map(notice => (\n                <Grid\n                  mobile={1}\n                  tablet={1}\n                  laptop={1}\n                  desktop={1}\n                  key={notice._id}\n                >\n                  <NoticeCard notice={notice} />\n                </Grid>\n              ))}\n            </Grid>\n          </Box>\n        )\n      )}\n    </>\n  );\n};\n\nexport default NoticesList;\n"],"names":["_ref","notice","_id","title","category","age","breed","location","imageUrl","price","favorite","myads","useParams","_jsxs","Card","sx","maxWidth","id","children","_jsx","CardMedia","height","image","Chip","label","toString","CardContent","Typography","gutterBottom","variant","component","List","ListItem","ListItemText","years","concat","months","CardActions","spacing","Button","size","getCategory","useCallback","_useGetNoticesByCateg","useGetNoticesByCategoryQuery","_useGetNoticesByCateg2","data","notices","error","isFetching","_Fragment","Box","display","justifyContent","marginTop","CircularProgress","color","length","src","errorImg","alt","width","flexGrow","Grid","container","columns","mobile","tablet","laptop","desktop","map","NoticeCard"],"sourceRoot":""}