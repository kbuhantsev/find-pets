{"version":3,"file":"static/js/980.3664ca15.chunk.js","mappings":"oUAEaA,EAAqBC,EAAAA,EAAAA,MAAY,SAAAC,GAAA,IAAAC,EAAGC,EAAKF,EAALE,MAAK,OAAAD,EAAA,CACpDE,QAAS,OACTC,cAAe,SACfC,MAAO,QACPC,SAAU,WACVC,IAAK,QACLC,KAAM,MACNC,UAAW,mBACXC,UAAW,WAAQC,EAAAA,EAAAA,GAAAV,EAClBC,EAAMU,YAAYC,GAAG,UAAY,CAChCR,MAAO,QACPE,IAAK,4BACLO,gBAAiB,QACjBC,UAAW,mCACXC,aAAc,OACdC,QAAS,eACVN,EAAAA,EAAAA,GAAAV,EACAC,EAAMU,YAAYC,GAAG,WAAa,CACjCR,MAAO,UACRJ,CAAA,I,SClBUiB,GAAsBnB,EAAAA,EAAAA,GAAOoB,EAAAA,EAAPpB,EACjC,SAAAC,GAAA,IAAAC,EAAGC,EAAKF,EAALE,MAAOkB,EAAKpB,EAALoB,MAAK,OAAAnB,EAAA,CACbe,aAAc,OACdK,OAAQ,OACRC,OAAO,GAADC,OAAKH,EAAQ,gBAAkB,uCAAqCT,EAAAA,EAAAA,GAAAV,EACzEC,EAAMU,YAAYC,GAAG,UAAY,CAChCQ,OAAQ,UACTV,EAAAA,EAAAA,GAAAV,EAED,kBAAmB,CACjBqB,OAAQ,iCACTX,EAAAA,EAAAA,GAAAV,EAED,eAAgB,CACdqB,OAAQ,UACTX,EAAAA,EAAAA,GAAAV,EAED,QAAS,CACPuB,MAAO,QACRvB,CAAA,I,iDCCCwB,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,KACJC,MAAM,yBACNC,QACC,kFACA,yBAEDC,IAAI,GAAI,8CACRC,IAAI,GAAI,yCACRC,SAAS,4BACZC,SAAUN,EAAAA,KACPE,QAAQ,mBAAoB,qCAC5BC,IAAI,EAAG,gDACPC,IAAI,GAAI,4CACRC,SAAS,4BACZE,iBAAkBP,EAAAA,KACfQ,MACC,CAACR,EAAAA,GAAQ,YAAa,MACtB,6CAEDK,SAAS,4BACZI,KAAMT,EAAAA,KACHI,IAAI,GAAI,wCACRF,QAAQ,cAAe,sBACvBG,SAAS,4BACZK,KAAMV,EAAAA,KACHE,QACC,uBACA,wEAEDG,SAAS,4BACZM,MAAOX,EAAAA,KACJE,QACC,cACA,sEAEDU,OAAO,GAAI,oCACXP,SAAS,8BA8Od,EA3OqB,WACnB,IAAAQ,GAAwBC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAkDC,EAAAA,EAAAA,MAAyBC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAApEG,EAAYD,EAAA,GAAAE,EAAAF,EAAA,GAAIG,EAASD,EAATC,UAAWC,EAAUF,EAAVE,WAClCC,GAAiDC,EAAAA,EAAAA,MAAsBC,GAAAZ,EAAAA,EAAAA,GAAAU,EAAA,GAAhEG,EAASD,EAAA,GAAgBE,EAAWF,EAAA,GAAvBH,WACpBM,EAAwCC,EAAAA,UAAe,GAAMC,GAAAjB,EAAAA,EAAAA,GAAAe,EAAA,GAAtDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,GAAWC,EAAAA,EAAAA,MAEXC,EAA0B,WAAH,OAASH,GAAgB,SAAAI,GAAI,OAAKA,CAAI,GAAE,EAE/DC,EAA0B,SAAAC,GAC9BA,EAAMC,gBACR,EAEMC,EAAQ,eAAArE,GAAAsE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,EAAQC,GAAO,IAAAhD,EAAAK,EAAAG,EAAAC,EAAAC,EAAAuC,EAAAC,EAAA,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACK,OAAlCtD,EAAuC+C,EAAvC/C,MAAOK,EAAgC0C,EAAhC1C,SAAUG,EAAsBuC,EAAtBvC,KAAMC,EAAgBsC,EAAhBtC,KAAMC,EAAUqC,EAAVrC,MAAK0C,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGlCjC,EAAa,CACjBrB,MAAAA,EACAK,SAAAA,EACAG,KAAAA,EACAC,KAAAA,EACAC,MAAAA,IACC6C,SAAS,KAAD,SAAAH,EAAAE,KAAA,EAEY1B,EAAU,CAC/B5B,MAAAA,EACAK,SAAAA,IACCkD,SAAS,KAAD,EAAAN,EAAAG,EAAAI,KAHHN,EAAID,EAAJC,KAKRO,EAAAA,OAAAA,QAAe,UAAD7D,OAAWsD,EAAK1C,OAE9B2B,EAAS,SAASiB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAElBO,QAAQC,IAAGR,EAAAM,IACXD,EAAAA,OAAAA,QAAeL,EAAAM,GAAMG,KAAKC,SAAS,QAGrCd,EAAQe,eAAc,GAAO,yBAAAX,EAAAY,OAAA,GAAAlB,EAAA,mBAC9B,gBA1BamB,EAAAC,GAAA,OAAA7F,EAAA8F,MAAA,KAAAC,UAAA,KA8CRC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbvE,MAAO,GACPK,SAAU,GACVC,iBAAkB,GAClBE,KAAM,GACNC,KAAM,GACNC,MAAO,IAETZ,iBAAkBA,EAClB4C,SAAUA,IAGZ,OACE8B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGnD,GAAaC,GAAcK,GAC1B2C,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACnG,QAAQ,OAAOoG,eAAe,SAASC,UAAU,OAAMH,UAC1DF,EAAAA,EAAAA,KAACM,EAAAA,EAAgB,CAACjF,MAAM,UAAUkF,KAAM,QAG1CC,EAAAA,EAAAA,MAAC7G,EAAkB,CAACuE,SAAU2B,EAAOY,aAAaP,SAAA,EAChDF,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAIT,SAAC,iBACf,IAAT1D,IACCgE,EAAAA,EAAAA,MAAAP,EAAAA,SAAA,CAAAC,SAAA,EACEM,EAAAA,EAAAA,MAACI,EAAAA,EAAW,CAACC,GAAI,CAAEC,EAAG,GAAKH,QAAQ,WAAUT,SAAA,EAC3CF,EAAAA,EAAAA,KAACjF,EAAmB,CAClBiB,KAAK,QACL+E,KAAK,OACLC,YAAY,QACZC,MAAOpB,EAAOtB,OAAO/C,MACrB0F,SAAUrB,EAAOsB,aACjBC,OAAQvB,EAAOwB,WACfpG,MAAO4E,EAAOyB,QAAQ9F,OAAS+F,QAAQ1B,EAAO2B,OAAOhG,OACrD,mBAAiB,2BAEnBwE,EAAAA,EAAAA,KAACyB,EAAAA,EAAc,CAACC,GAAG,wBAAuBxB,SACvCL,EAAO2B,OAAOhG,YAInBgF,EAAAA,EAAAA,MAACI,EAAAA,EAAW,CAACC,GAAI,CAAEC,EAAG,GAAKH,QAAQ,WAAUT,SAAA,EAC3CF,EAAAA,EAAAA,KAACjF,EAAmB,CAClBiB,KAAK,WACL+E,KAAMtD,EAAe,OAAS,WAC9BkE,cACE3B,EAAAA,EAAAA,KAAC4B,EAAAA,EAAc,CAACzH,SAAS,MAAK+F,UAC5BF,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CACT,aAAW,6BACXC,QAASjE,EACTkE,YAAahE,EACbiE,KAAK,MAAK9B,SAETzC,GAAeuC,EAAAA,EAAAA,KAACiC,EAAAA,EAAa,KAAMjC,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,QAIrDlB,YAAY,WACZC,MAAOpB,EAAOtB,OAAO1C,SACrBqF,SAAUrB,EAAOsB,aACjBC,OAAQvB,EAAOwB,WACfpG,MACE4E,EAAOyB,QAAQzF,UAAY0F,QAAQ1B,EAAO2B,OAAO3F,UAEnD,mBAAiB,8BAEnBmE,EAAAA,EAAAA,KAACyB,EAAAA,EAAc,CAACC,GAAG,2BAA0BxB,SAC1CL,EAAO2B,OAAO3F,eAInB2E,EAAAA,EAAAA,MAACI,EAAAA,EAAW,CAACC,GAAI,CAAEC,EAAG,GAAKH,QAAQ,WAAUT,SAAA,EAC3CF,EAAAA,EAAAA,KAACjF,EAAmB,CAClBiB,KAAK,mBACL+E,KAAMtD,EAAe,OAAS,WAC9BkE,cACE3B,EAAAA,EAAAA,KAAC4B,EAAAA,EAAc,CAACzH,SAAS,MAAK+F,UAC5BF,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CACT,aAAW,6BACXC,QAASjE,EACTkE,YAAahE,EACbiE,KAAK,MAAK9B,SAETzC,GAAeuC,EAAAA,EAAAA,KAACiC,EAAAA,EAAa,KAAMjC,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,QAIrDlB,YAAY,mBACZC,MAAOpB,EAAOtB,OAAOzC,iBACrBoF,SAAUrB,EAAOsB,aACjBC,OAAQvB,EAAOwB,WACfpG,MACE4E,EAAOyB,QAAQxF,kBACfyF,QAAQ1B,EAAO2B,OAAO1F,kBAExB,mBAAiB,sCAEnBkE,EAAAA,EAAAA,KAACyB,EAAAA,EAAc,CAACC,GAAG,mCAAkCxB,SAClDL,EAAO2B,OAAO1F,yBAKb,IAATU,IACCgE,EAAAA,EAAAA,MAAAP,EAAAA,SAAA,CAAAC,SAAA,EACEM,EAAAA,EAAAA,MAACI,EAAAA,EAAW,CAACC,GAAI,CAAEC,EAAG,GAAKH,QAAQ,WAAUT,SAAA,EAC3CF,EAAAA,EAAAA,KAACjF,EAAmB,CAClBiB,KAAK,OACL+E,KAAK,OACLC,YAAY,OACZC,MAAOpB,EAAOtB,OAAOvC,KACrBkF,SAAUrB,EAAOsB,aACjBC,OAAQvB,EAAOwB,WACfpG,MAAO4E,EAAOyB,QAAQtF,MAAQuF,QAAQ1B,EAAO2B,OAAOxF,MACpD,mBAAiB,0BAEnBgE,EAAAA,EAAAA,KAACyB,EAAAA,EAAc,CAACC,GAAG,uBAAsBxB,SACtCL,EAAO2B,OAAOxF,WAInBwE,EAAAA,EAAAA,MAACI,EAAAA,EAAW,CAACC,GAAI,CAAEC,EAAG,GAAKH,QAAQ,WAAUT,SAAA,EAC3CF,EAAAA,EAAAA,KAACjF,EAAmB,CAClBiB,KAAK,OACL+E,KAAK,OACLC,YAAY,eACZC,MAAOpB,EAAOtB,OAAOtC,KACrBiF,SAAUrB,EAAOsB,aACjBC,OAAQvB,EAAOwB,WACfpG,MAAO4E,EAAOyB,QAAQrF,MAAQsF,QAAQ1B,EAAO2B,OAAOvF,MACpD,mBAAiB,0BAEnB+D,EAAAA,EAAAA,KAACyB,EAAAA,EAAc,CAACC,GAAG,uBAAsBxB,SACtCL,EAAO2B,OAAOvF,WAInBuE,EAAAA,EAAAA,MAACI,EAAAA,EAAW,CAACC,GAAI,CAAEC,EAAG,GAAKH,QAAQ,WAAUT,SAAA,EAC3CF,EAAAA,EAAAA,KAACjF,EAAmB,CAClBiB,KAAK,QACL+E,KAAK,OACLC,YAAY,eACZC,MAAOpB,EAAOtB,OAAOrC,MACrBgF,SAAUrB,EAAOsB,aACjBC,OAAQvB,EAAOwB,WACfpG,MAAO4E,EAAOyB,QAAQpF,OAASqF,QAAQ1B,EAAO2B,OAAOtF,OACrD,mBAAiB,2BAEnB8D,EAAAA,EAAAA,KAACyB,EAAAA,EAAc,CAACC,GAAG,wBAAuBxB,SACvCL,EAAO2B,OAAOtF,YAInB8D,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CACLxB,QAAQ,YACRI,KAAK,SACLR,KAAK,QACLM,GAAI,CAAEhG,aAAc,OAAQX,MAAO,OAAQkI,GAAI,QAASlC,SACzD,iBAKLF,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CACLxB,QAAkB,IAATnE,EAAa,YAAc,WACpC+D,KAAK,QACLM,GAAI,CAAEhG,aAAc,OAAQX,MAAO,QACnC4H,QAxLW,WACnB,GAAa,IAATtF,EAAY,CACd,IAAA6F,EAIIxC,EAAO2B,OAHFc,EAAUD,EAAjB7G,MACU+G,EAAaF,EAAvBxG,SACkB2G,EAAYH,EAA9BvG,iBAGF,GAAIwG,GAAcC,GAAiBC,EAEjC,YADAvD,EAAAA,OAAAA,QAAe,6BAGjBxC,EAAQ,EACV,MACEA,EAAQ,EAEZ,EAwKgCyD,SAEZ,IAAT1D,EAAa,OAAS,aAMnC,EC9RA,EARqB,WACnB,OACEwD,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACyC,EAAY,KAGnB,C","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/Inputs/OutlinedInput.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const RegisterFormStyled = styled.form(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  width: '280px',\n  position: 'absolute',\n  top: '100px',\n  left: '50%',\n  transform: 'translateX(-50%)',\n  textAlign: 'center',\n  [theme.breakpoints.up('tablet')]: {\n    width: '608px',\n    top: 'calc((100vh - 490px) / 2)',\n    backgroundColor: 'white',\n    boxShadow: '7px 4px 14px rgba(0, 0, 0, 0.11)',\n    borderRadius: '40px',\n    padding: '60px 80px',\n  },\n  [theme.breakpoints.up('desktop')]: {\n    width: '618px',\n  },\n}));\n","import styled from '@emotion/styled';\nimport { OutlinedInput } from '@mui/material';\n\nexport const OutlinedInputStyled = styled(OutlinedInput)(\n  ({ theme, error }) => ({\n    borderRadius: '30px',\n    height: '40px',\n    border: `${error ? '1px solid red' : '1px solid rgba(245, 146, 86, 0.5)'}`,\n    [theme.breakpoints.up('tablet')]: {\n      height: '52px',\n    },\n\n    '&:hover,&:focus': {\n      border: '1px solid rgb(245, 146, 86)',\n    },\n\n    '& > fieldset': {\n      border: 'none',\n    },\n\n    '& + p': {\n      color: 'red',\n    },\n  })\n);\n","import React, { useState } from 'react';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport {\n  useLogInUserMutation,\n  useRegisterUserMutation,\n} from 'redux/user/userApi';\nimport {\n  Box,\n  Button,\n  CircularProgress,\n  FormControl,\n  FormHelperText,\n  IconButton,\n  InputAdornment,\n  Typography,\n} from '@mui/material';\nimport { RegisterFormStyled } from './RegisterForm.styled';\nimport { OutlinedInputStyled } from '../Inputs/OutlinedInput.styled';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useNavigate } from 'react-router-dom';\n\nconst validationSchema = Yup.object({\n  email: Yup.string()\n    .email('Invalid email address')\n    .matches(\n      /^([a-zA-Z0-9])+([a-zA-Z0-9._-]+)@[a-zA-Z0-9]+([.-]?[a-zA-Z0-9]+)\\.[a-zA-Z]{2,}$/,\n      'Invalid email address'\n    )\n    .min(10, 'Email must include more tnan 10 characters')\n    .max(63, 'Email must be less tnan 63 characters')\n    .required('This is a required field'),\n  password: Yup.string()\n    .matches(/^[^\\s]+(^\\s.*)?$/, \"Password can't include whitespace\")\n    .min(7, 'Password must include more tnan 7 characters')\n    .max(32, 'Password must be less tnan 32 characters')\n    .required('This is a required field'),\n  confirm_password: Yup.string()\n    .oneOf(\n      [Yup.ref('password'), null],\n      \"Password and confirm password don't match\"\n    )\n    .required('This is a required field'),\n  name: Yup.string()\n    .max(70, 'Name must be less tnan 70 characters')\n    .matches(/^[a-zA-Z]+$/, 'Only latin letters')\n    .required('This is a required field'),\n  city: Yup.string()\n    .matches(\n      /[A-Za-z]+, [A-Za-z]+/,\n      'Please, enter the data in format \"region, city\" (only latin letters)'\n    )\n    .required('This is a required field'),\n  phone: Yup.string()\n    .matches(\n      /^\\+380\\d{9}/,\n      'Please, enter the phone number in the following way: +380XXXXXXXXX'\n    )\n    .length(13, 'Phone must include 13 characters')\n    .required('This is a required field'),\n});\n\nconst RegisterForm = () => {\n  const [page, setPage] = useState(1);\n  const [registerUser, { isLoading, isFetching }] = useRegisterUserMutation();\n  const [loginUser, { isFetching: isLoggingIn }] = useLogInUserMutation();\n  const [showPassword, setShowPassword] = React.useState(false);\n  const navigate = useNavigate();\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const onSubmit = async (values, actions) => {\n    const { email, password, name, city, phone } = values;\n\n    try {\n      await registerUser({\n        email,\n        password,\n        name,\n        city,\n        phone,\n      }).unwrap();\n\n      const { user } = await loginUser({\n        email,\n        password,\n      }).unwrap();\n\n      Notify.success(`Hello, ${user.name}`);\n\n      navigate('/user');\n    } catch (error) {\n      console.log(error);\n      Notify.failure(error.data.message);\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const onPageChange = () => {\n    if (page === 1) {\n      const {\n        email: emailError,\n        password: passwordError,\n        confirm_password: confirmError,\n      } = formik.errors;\n\n      if (emailError || passwordError || confirmError) {\n        Notify.warning('Fill all required fields!');\n        return;\n      }\n      setPage(2);\n    } else {\n      setPage(1);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      confirm_password: '',\n      name: '',\n      city: '',\n      phone: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n  });\n\n  return (\n    <>\n      {isLoading || isFetching || isLoggingIn ? (\n        <Box display=\"flex\" justifyContent=\"center\" marginTop=\"50px\">\n          <CircularProgress color=\"primary\" size={75} />\n        </Box>\n      ) : (\n        <RegisterFormStyled onSubmit={formik.handleSubmit}>\n          <Typography variant=\"h3\">Registration</Typography>\n          {page === 1 && (\n            <>\n              <FormControl sx={{ m: 1 }} variant=\"outlined\">\n                <OutlinedInputStyled\n                  name=\"email\"\n                  type=\"text\"\n                  placeholder=\"Email\"\n                  value={formik.values.email}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  error={formik.touched.email && Boolean(formik.errors.email)}\n                  aria-describedby=\"component-email-error\"\n                />\n                <FormHelperText id=\"component-email-error\">\n                  {formik.errors.email}\n                </FormHelperText>\n              </FormControl>\n\n              <FormControl sx={{ m: 1 }} variant=\"outlined\">\n                <OutlinedInputStyled\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}\n                        edge=\"end\"\n                      >\n                        {showPassword ? <VisibilityOff /> : <Visibility />}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                  placeholder=\"Password\"\n                  value={formik.values.password}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  error={\n                    formik.touched.password && Boolean(formik.errors.password)\n                  }\n                  aria-describedby=\"component-password-error\"\n                />\n                <FormHelperText id=\"component-password-error\">\n                  {formik.errors.password}\n                </FormHelperText>\n              </FormControl>\n\n              <FormControl sx={{ m: 1 }} variant=\"outlined\">\n                <OutlinedInputStyled\n                  name=\"confirm_password\"\n                  type={showPassword ? 'text' : 'password'}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}\n                        edge=\"end\"\n                      >\n                        {showPassword ? <VisibilityOff /> : <Visibility />}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                  placeholder=\"Confirm Password\"\n                  value={formik.values.confirm_password}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  error={\n                    formik.touched.confirm_password &&\n                    Boolean(formik.errors.confirm_password)\n                  }\n                  aria-describedby=\"component-confirm_password-error\"\n                />\n                <FormHelperText id=\"component-confirm_password-error\">\n                  {formik.errors.confirm_password}\n                </FormHelperText>\n              </FormControl>\n            </>\n          )}\n          {page === 2 && (\n            <>\n              <FormControl sx={{ m: 1 }} variant=\"outlined\">\n                <OutlinedInputStyled\n                  name=\"name\"\n                  type=\"text\"\n                  placeholder=\"Name\"\n                  value={formik.values.name}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  error={formik.touched.name && Boolean(formik.errors.name)}\n                  aria-describedby=\"component-name-error\"\n                />\n                <FormHelperText id=\"component-name-error\">\n                  {formik.errors.name}\n                </FormHelperText>\n              </FormControl>\n\n              <FormControl sx={{ m: 1 }} variant=\"outlined\">\n                <OutlinedInputStyled\n                  name=\"city\"\n                  type=\"text\"\n                  placeholder=\"City, Region\"\n                  value={formik.values.city}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  error={formik.touched.city && Boolean(formik.errors.city)}\n                  aria-describedby=\"component-city-error\"\n                />\n                <FormHelperText id=\"component-city-error\">\n                  {formik.errors.city}\n                </FormHelperText>\n              </FormControl>\n\n              <FormControl sx={{ m: 1 }} variant=\"outlined\">\n                <OutlinedInputStyled\n                  name=\"phone\"\n                  type=\"text\"\n                  placeholder=\"Mobile phone\"\n                  value={formik.values.phone}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  error={formik.touched.phone && Boolean(formik.errors.phone)}\n                  aria-describedby=\"component-phone-error\"\n                />\n                <FormHelperText id=\"component-phone-error\">\n                  {formik.errors.phone}\n                </FormHelperText>\n              </FormControl>\n\n              <Button\n                variant=\"contained\"\n                type=\"submit\"\n                size=\"large\"\n                sx={{ borderRadius: '20px', width: '100%', mb: '16px' }}\n              >\n                Register\n              </Button>\n            </>\n          )}\n          <Button\n            variant={page === 1 ? 'contained' : 'outlined'}\n            size=\"large\"\n            sx={{ borderRadius: '20px', width: '100%' }}\n            onClick={onPageChange}\n          >\n            {page === 1 ? 'Next' : 'Back'}\n          </Button>\n        </RegisterFormStyled>\n      )}\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["RegisterFormStyled","styled","_ref","_ref2","theme","display","flexDirection","width","position","top","left","transform","textAlign","_defineProperty","breakpoints","up","backgroundColor","boxShadow","borderRadius","padding","OutlinedInputStyled","OutlinedInput","error","height","border","concat","color","validationSchema","Yup","email","matches","min","max","required","password","confirm_password","oneOf","name","city","phone","length","_useState","useState","_useState2","_slicedToArray","page","setPage","_useRegisterUserMutat","useRegisterUserMutation","_useRegisterUserMutat2","registerUser","_useRegisterUserMutat3","isLoading","isFetching","_useLogInUserMutation","useLogInUserMutation","_useLogInUserMutation2","loginUser","isLoggingIn","_React$useState","React","_React$useState2","showPassword","setShowPassword","navigate","useNavigate","handleClickShowPassword","show","handleMouseDownPassword","event","preventDefault","onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","actions","_yield$loginUser$unwr","user","wrap","_context","prev","next","unwrap","sent","Notify","t0","console","log","data","message","setSubmitting","stop","_x","_x2","apply","arguments","formik","useFormik","initialValues","_jsx","_Fragment","children","Box","justifyContent","marginTop","CircularProgress","size","_jsxs","handleSubmit","Typography","variant","FormControl","sx","m","type","placeholder","value","onChange","handleChange","onBlur","handleBlur","touched","Boolean","errors","FormHelperText","id","endAdornment","InputAdornment","IconButton","onClick","onMouseDown","edge","VisibilityOff","Visibility","Button","mb","_formik$errors","emailError","passwordError","confirmError","RegisterForm"],"sourceRoot":""}