{"version":3,"file":"static/js/499.31c1d443.chunk.js","mappings":"iQAsCA,EAhCoB,WAElB,IAAAA,GAAiDC,EAAAA,EAAAA,KAAuBC,EAAAF,EAAhEG,KAAMC,OAAO,IAAAF,EAAG,GAAEA,EAAEG,EAAKL,EAALK,MAAOC,EAASN,EAATM,UAMnC,OAJAC,EAAAA,EAAAA,UAAQ,iBAAM,EAAE,GAAE,KAKhBC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGJ,IACCK,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CACPC,GAAI,CAAEC,MAAO,OAAQC,OAAQ,SAAAC,GAAK,OAAIA,EAAMD,OAAOE,OAAS,CAAC,GAC7DC,KAAMZ,EAAUI,UAEhBC,EAAAA,EAAAA,KAACQ,EAAAA,EAAgB,CAACL,MAAM,cAG3BT,IAASM,EAAAA,EAAAA,KAAA,OAAKS,IAAKC,EAAUC,IAAI,UACjClB,IACCO,EAAAA,EAAAA,KAAA,MAAAD,SACGN,EAAQmB,KAAI,SAAAC,GAAM,OACjBhB,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACGc,EAAOC,SAAS,IAAED,EAAOE,QADnBF,EAAOG,GAEX,QAMjB,C","sources":["components/Notices/NoticesList/NoticesList.jsx"],"sourcesContent":["import { Backdrop, CircularProgress } from '@mui/material';\nimport { useMemo } from 'react';\n// import { useParams } from 'react-router-dom';\nimport { useGetAllNoticesQuery } from 'redux/notices/noticesApi';\nimport errorImg from '../../../images/errors/puppy.png';\n\nconst NoticesList = () => {\n  // let { category } = useParams();\n  const { data: notices = [], error, isLoading } = useGetAllNoticesQuery();\n\n  useMemo(() => '', []);\n\n  // console.log(notices);\n\n  return (\n    <>\n      {isLoading && (\n        <Backdrop\n          sx={{ color: '#fff', zIndex: theme => theme.zIndex.drawer + 1 }}\n          open={isLoading}\n        >\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      )}\n      {error && <img src={errorImg} alt=\"puppy\" />}\n      {notices && (\n        <ul>\n          {notices.map(notice => (\n            <li key={notice.id}>\n              {notice.category} {notice.title}\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default NoticesList;\n"],"names":["_useGetAllNoticesQuer","useGetAllNoticesQuery","_useGetAllNoticesQuer2","data","notices","error","isLoading","useMemo","_jsxs","_Fragment","children","_jsx","Backdrop","sx","color","zIndex","theme","drawer","open","CircularProgress","src","errorImg","alt","map","notice","category","title","id"],"sourceRoot":""}