{"version":3,"file":"static/js/100.3d1a31c4.chunk.js","mappings":"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","sources":["components/Notices/NoticeCard/NoticeCard.styled.jsx","components/Notices/NoticeCard/NoticeCard.jsx","components/Notices/NoticesList/NoticesList.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport {\n  Card,\n  Chip,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n} from '@mui/material';\n\nexport const CardStyled = styled(Card)`\n  max-width: 345px;\n  position: relative;\n`;\n\nexport const ChipCategory = styled(Chip)`\n  position: absolute;\n  top: 20px;\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  background: rgba(255, 255, 255, 0.6);\n  backdrop-filter: blur(2px);\n`;\n\nexport const ChipFavorite = styled(Chip)`\n  position: absolute;\n  right: 10px;\n  top: 12px;\n  width: 44px;\n  height: 44px;\n  background: rgba(255, 255, 255, 0.6);\n  backdrop-filter: blur(2px);\n  border-radius: 50%;\n`;\n\nexport const CardTitle = styled(Typography)`\n  font-size: 28px;\n  font-weight: 700;\n`;\n\nexport const ListStyled = styled(List)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding-top: 0;\n  padding-bottom: 0;\n`;\n\nexport const ListItemStyled = styled(ListItem)`\n  padding-top: 0;\n  padding-bottom: 0;\n`;\n\nexport const DescrTitle = styled(ListItemText)`\n  font-size: 16px;\n  flex-basis: 30%;\n`;\n\nexport const DescrValue = styled(ListItemText)`\n  font-size: 16px;\n  flex-basis: 70%;\n`;\n","import React from 'react';\nimport { CardMedia, CardContent, Button, CardActions } from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport {\n  CardStyled,\n  CardTitle,\n  ChipCategory,\n  ChipFavorite,\n  DescrTitle,\n  DescrValue,\n  ListItemStyled,\n  ListStyled,\n} from './NoticeCard.styled';\n\n// {\n//   \"_id\": \"63fe2ad6f3ffff3515f80757\",\n//   \"title\": \"Вiддам рибок разом з акварiумом\",\n//   \"category\": \"inGoodHands\",\n//    \"petName\": \"рибки\",\n//    \"dateOfBirth\": \"2022-07-22T00:00:00.000Z\",\n//    \"breed\": \"рибки\",\n//    \"sex\": \"female\",\n//    \"location\": \"Чернiвцi, Чернiвцi\",\n//    \"price\": 0,\n//    \"imageUrl\": \"https://res.cloudinary.com/dwwvmul1w/image/upload/v1677601494/pets-project/notices/63fe2ad6f3ffff3515f80757.jpg\",\n//    \"comment\": \"Віддам рибок разом з акваріумом. Розкажу як за ними доглядати.\",\n//    \"age\": {\n//         \"days\": 13,\n//         \"months\": 7,\n//         \"years\": 0\n//   };\n//   ПОЯВЛЯЮТСЯ:\n//\"favorite\": false,\n//\"myads\": true,\n\nconst NoticeCard = ({ notice }) => {\n  let {\n    _id,\n    title,\n    category,\n    age,\n    breed,\n    location,\n    imageUrl,\n    price,\n    favorite,\n    myads,\n  } = notice;\n\n  // С бэкэнда не приходит\n  let { category: currentCategory } = useParams();\n  if (currentCategory === 'my-ads') {\n    myads = true;\n  }\n\n  return (\n    <CardStyled id={_id}>\n      <ChipCategory label={category} />\n      <ChipFavorite label={favorite?.toString()} />\n      <CardMedia sx={{ height: 280 }} image={imageUrl} />\n\n      <CardContent>\n        <CardTitle variant=\"h6\" gutterBottom>\n          {title}\n        </CardTitle>\n        <ListStyled>\n          <ListItemStyled>\n            <DescrTitle>Breed</DescrTitle>\n            <DescrValue>{breed}</DescrValue>\n          </ListItemStyled>\n          <ListItemStyled>\n            <DescrTitle>Place</DescrTitle>\n            <DescrValue>{location}</DescrValue>\n          </ListItemStyled>\n          <ListItemStyled>\n            <DescrTitle>Age</DescrTitle>\n            <DescrValue>\n              {age.years > 0 ? `${age.years} years` : `${age.months} months`}\n            </DescrValue>\n          </ListItemStyled>\n          {price > 0 && (\n            <ListItemStyled>\n              <DescrTitle>Price</DescrTitle>\n              <DescrValue>{price}</DescrValue>\n            </ListItemStyled>\n          )}\n        </ListStyled>\n      </CardContent>\n      <CardActions sx={{ spacing: true }}>\n        {myads && (\n          <Button variant=\"outlined\" size=\"medium\">\n            Delete\n          </Button>\n        )}\n        <Button variant=\"outlined\" size=\"medium\">\n          Learn More\n        </Button>\n      </CardActions>\n    </CardStyled>\n  );\n};\n\nexport default NoticeCard;\n","import { Box, CircularProgress } from '@mui/material';\nimport Grid from '@mui/material/Unstable_Grid2';\nimport { useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useGetNoticesByCategoryQuery } from 'redux/notices/noticesApi';\nimport errorImg from '../../../images/errors/puppy.png';\nimport NoticeCard from '../NoticeCard/NoticeCard';\n\nconst NoticesList = () => {\n  let { category } = useParams();\n\n  const getCategory = useCallback(() => {\n    switch (category) {\n      case 'sell':\n        return 'category/sell';\n      case 'lost-found':\n        return 'category/lostFound';\n      case 'in-good-hands':\n        return 'category/inGoodHands';\n      case 'favorite':\n        return 'favorites';\n      case 'my-ads':\n        return 'myNotices';\n      default:\n        return 'sell';\n    }\n  }, [category]);\n\n  const {\n    data: notices = [],\n    error,\n    isFetching,\n  } = useGetNoticesByCategoryQuery(getCategory());\n\n  return (\n    <>\n      {isFetching ? (\n        <Box display=\"flex\" justifyContent=\"center\" marginTop=\"50px\">\n          <CircularProgress color=\"primary\" size={75} />\n        </Box>\n      ) : error ?? notices.length === 0 ? (\n        <img src={errorImg} alt=\"puppy\" width={300} />\n      ) : (\n        notices && (\n          <Box sx={{ flexGrow: 1 }}>\n            <Grid\n              container\n              columns={{ mobile: 1, tablet: 2, laptop: 3, desktop: 4 }}\n              spacing={{ mobile: 1, tablet: 2, laptop: 2, desktop: 3 }}\n            >\n              {notices.map(notice => (\n                <Grid\n                  mobile={1}\n                  tablet={1}\n                  laptop={1}\n                  desktop={1}\n                  key={notice._id}\n                >\n                  <NoticeCard notice={notice} />\n                </Grid>\n              ))}\n            </Grid>\n          </Box>\n        )\n      )}\n    </>\n  );\n};\n\nexport default NoticesList;\n"],"names":["CardStyled","styled","Card","_templateObject","_taggedTemplateLiteral","ChipCategory","Chip","_templateObject2","ChipFavorite","_templateObject3","CardTitle","Typography","_templateObject4","ListStyled","List","_templateObject5","ListItemStyled","ListItem","_templateObject6","DescrTitle","ListItemText","_templateObject7","DescrValue","_templateObject8","_ref","notice","_id","title","category","age","breed","location","imageUrl","price","favorite","myads","useParams","_jsxs","id","children","_jsx","label","toString","CardMedia","sx","height","image","CardContent","variant","gutterBottom","years","concat","months","CardActions","spacing","Button","size","getCategory","useCallback","_useGetNoticesByCateg","useGetNoticesByCategoryQuery","_useGetNoticesByCateg2","data","notices","error","isFetching","_Fragment","Box","display","justifyContent","marginTop","CircularProgress","color","length","src","errorImg","alt","width","flexGrow","Grid","container","columns","mobile","tablet","laptop","desktop","map","NoticeCard"],"sourceRoot":""}