{"version":3,"file":"static/js/972.8cc2b24d.chunk.js","mappings":"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","sources":["components/UserPage/PetsList/PetsList.styled.jsx","components/UserPage/PetsList/PetsList.jsx","components/UserPage/UserDataForm/UserDataForm.styled.jsx","components/Buttons/LogoutButton/LogoutButton.styled.jsx","components/Buttons/LogoutButton/LogoutButton.jsx","components/UserPage/UserDataForm/TextInput/TextInput.styled.jsx","components/UserPage/UserDataForm/TextInput/TextInput.jsx","components/UserPage/UserDataForm/DateInput/DateInput.jsx","components/UserPage/UserDataForm/UserDataForm.jsx","components/UserPage/UserInformation/UserInformation.styled.jsx","components/UserPage/UserAvatar/UserAvatar.styled.jsx","components/UserPage/UserAvatar/UserAvatar.jsx","components/UserPage/UserInformation/UserInformation.jsx","components/UserPage/UserPage.styled.jsx","pages/UserPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const PetsListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 60px;\n`;\n","import { Typography } from '@mui/material';\nimport React from 'react';\nimport { PetsListWrapper } from './PetsList.styled';\n\nconst PetsList = () => {\n  return (\n    <PetsListWrapper>\n      <Typography variant=\"h6\">My pets:</Typography>\n    </PetsListWrapper>\n  );\n};\n\nexport default PetsList;\n","import styled from '@emotion/styled';\n\nexport const UserFormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n","import styled from '@emotion/styled';\nimport { IconButton } from '@mui/material';\n\nexport const IconButtonStyled = styled(IconButton)`\n  width: fit-content;\n  color: ${p => p.theme.palette.primary.light};\n`;\n\nexport const LogoutSpan = styled.span`\n  font-size: 12px;\n  letter-spacing: 0.04em;\n  color: rgba(17, 17, 17, 0.6);\n  font-size: 16px;\n  font-weight: 500;\n`;\n","import React, { useCallback } from 'react';\nimport { useLogOutUserMutation } from 'redux/user/userApi';\nimport { IconButtonStyled, LogoutSpan } from './LogoutButton.styled';\nimport { Notify } from 'notiflix';\nimport LogoutIcon from '@mui/icons-material/Logout';\n\nconst LogoutButton = () => {\n  const [logOutUser] = useLogOutUserMutation();\n\n  const onBtnLogOutClick = useCallback(async () => {\n    try {\n      await logOutUser().unwrap();\n      Notify.success('Success');\n    } catch (error) {\n      Notify.error(error.message);\n    }\n  }, [logOutUser]);\n  return (\n    <IconButtonStyled onClick={onBtnLogOutClick}>\n      <LogoutIcon />\n      <LogoutSpan>Log Out</LogoutSpan>\n    </IconButtonStyled>\n  );\n};\n\nexport default LogoutButton;\n","import styled from '@emotion/styled';\nimport { TextField } from '@mui/material';\n\nexport const TextFieldStyled = styled(TextField)(({ theme }) => ({}));\n","import IconButton from '@mui/material/IconButton';\nimport React, { useMemo, useState } from 'react';\nimport EditIcon from '@mui/icons-material/Edit';\nimport CheckIcon from '@mui/icons-material/Check';\nimport { Box } from '@mui/system';\nimport { TextFieldStyled } from './TextInput.styled';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst TextInput = ({ formik, fieldName }) => {\n  const [focus, setFocus] = useState(false);\n\n  const fieldError = useMemo(\n    () => formik.errors[fieldName],\n    [formik.errors, fieldName]\n  );\n\n  const iconButtonClick = async () => {\n    if (focus && Boolean(fieldError)) {\n      Notify.failure(fieldError);\n      return;\n    }\n\n    setFocus(prev => !prev);\n    if (focus) {\n      //formik.handleSubmit();\n    }\n  };\n\n  return (\n    <Box display=\"flex\">\n      <TextFieldStyled\n        variant=\"standard\"\n        name={fieldName}\n        type=\"text\"\n        disabled={!focus}\n        value={formik.values[fieldName]}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        error={formik.touched[fieldName] && Boolean(formik.errors[fieldName])}\n        helperText={formik.errors[fieldName]}\n      />\n      <IconButton onClick={iconButtonClick}>\n        {focus ? <CheckIcon color=\"primary\" /> : <EditIcon color=\"primary\" />}\n      </IconButton>\n    </Box>\n  );\n};\n\nexport default TextInput;\n","import React from 'react';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\nimport dayjs from 'dayjs';\n//import { OutlinedInputStyled } from 'components/Inputs/OutlinedInput.styled';\nimport { TextField } from '@mui/material';\n\nconst DateInput = ({ formik, fieldName }) => {\n  const [value, setValue] = React.useState(\n    dayjs(new Date(formik.values[fieldName]))\n  );\n\n  const handleChange = newValue => {\n    setValue(newValue);\n    formik.values[fieldName] = dayjs(newValue).format('YYYY-MM-DD');\n  };\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n      <DesktopDatePicker\n        label=\"Birthday\"\n        inputFormat=\"DD.MM.YYYY\"\n        value={value}\n        onChange={handleChange}\n        renderInput={params => <TextField {...params} />}\n      />\n    </LocalizationProvider>\n  );\n};\n\nexport default DateInput;\n","import React, { useMemo } from 'react';\nimport { useUser } from 'hooks/useUser';\n\nimport { FormStyled, UserFormWrapper } from './UserDataForm.styled';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport LogoutButton from 'components/Buttons/LogoutButton/LogoutButton';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport TextInput from './TextInput/TextInput';\nimport DateInput from './DateInput/DateInput';\n// import { useUpdateUserMutation } from 'redux/user/userApi';\n\nexport const userProfileValidation = Yup.object({\n  name: Yup.string()\n    .min(1, 'Name is too short!')\n    .max(70, 'Name is too long!')\n    .matches(/^[a-zA-Z]+$/, 'Only letters!'),\n  email: Yup.string().matches(\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    'Incorrect email address!'\n  ),\n  birthdate: Yup.string().matches(\n    /^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[13-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$/\n  ),\n  phone: Yup.string().matches(/^\\+380\\d{9}$/, 'must have +380 format'),\n  city: Yup.string().matches(\n    /[A-Za-z]+, [A-Za-z]+/,\n    'Format is \"region, city\"'\n  ),\n});\n\nconst UserDataForm = () => {\n  const { user } = useUser();\n  // const [updateUser] = useUpdateUserMutation();\n\n  const convertDate = dateString => {\n    if (!dateString) return '0000-00-00';\n    const date = new Date(dateString);\n    return [\n      date.toLocaleString('default', { year: 'numeric' }),\n      date.toLocaleString('default', { month: '2-digit' }),\n      date.toLocaleString('default', { day: '2-digit' }),\n    ].join('-');\n  };\n\n  const userData = useMemo(() => {\n    const {\n      name = '',\n      email = '',\n      birthday = '0000-00-00',\n      phone = '',\n      city = '',\n    } = user;\n\n    return { name, email, birthday: convertDate(birthday), phone, city };\n  }, [user]);\n\n  const handleSubmit = async (values, actions) => {\n    Notify.success(values.toString());\n  };\n\n  const formik = useFormik({\n    initialValues: { ...userData },\n    enableReinitialize: true,\n    validationSchema: userProfileValidation,\n    onSubmit: handleSubmit,\n  });\n\n  return (\n    <UserFormWrapper>\n      <FormStyled onSubmit={formik.handleSubmit}>\n        {Object.entries(formik.initialValues).map(entrie => {\n          if (entrie[0] === 'birthday') {\n            return (\n              <DateInput\n                key={entrie[0]}\n                formik={formik}\n                fieldName={entrie[0]}\n              />\n            );\n          } else {\n            return (\n              <TextInput\n                key={entrie[0]}\n                formik={formik}\n                fieldName={entrie[0]}\n              />\n            );\n          }\n        })}\n      </FormStyled>\n      <LogoutButton />\n    </UserFormWrapper>\n  );\n};\n\nexport default UserDataForm;\n","import styled from '@emotion/styled';\nimport { Paper } from '@mui/material';\n\nexport const UserInformWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 60px;\n`;\n\nexport const PaperStyled = styled(Paper)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px 16px 10px 16px',\n  [theme.breakpoints.up('tablet')]: {\n    flexDirection: 'row-reverse',\n  },\n  [theme.breakpoints.up('desktop')]: {\n    flexDirection: 'column',\n    maxWidth: '410px',\n  },\n}));\n","import styled from '@emotion/styled';\nimport { Avatar, IconButton } from '@mui/material';\n\nexport const UserAvatarWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  position: relative;\n  width: 100%;\n`;\n\nexport const AvatarStyled = styled(Avatar)`\n  width: 230px;\n  height: 230px;\n  margin-bottom: 30px;\n  filter: drop-shadow(0px 4px 14px rgba(0, 0, 0, 0.11));\n`;\n\nexport const IconButtonStyled = styled(IconButton)`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  color: ${p => p.theme.palette.primary.light};\n`;\n\nexport const EditPhotoSpan = styled.span`\n  font-size: 12px;\n  letter-spacing: 0.04em;\n  color: ${p => p.theme.palette.common.black};\n`;\n","import React from 'react';\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera';\nimport { Notify } from 'notiflix';\nimport { useUser } from 'hooks/useUser';\nimport {\n  AvatarStyled,\n  EditPhotoSpan,\n  IconButtonStyled,\n  UserAvatarWrapper,\n} from './UserAvatar.styled';\n\nconst UserAvatar = () => {\n  const { user } = useUser();\n\n  const onBtnEditPhotoClick = () => {\n    Notify.success('Edit photo');\n  };\n\n  return (\n    <UserAvatarWrapper>\n      <AvatarStyled alt={user.name} src={user.avatarURL} />\n      <IconButtonStyled onClick={onBtnEditPhotoClick}>\n        <PhotoCameraIcon />\n        <EditPhotoSpan>Edit photo</EditPhotoSpan>\n      </IconButtonStyled>\n    </UserAvatarWrapper>\n  );\n};\n\nexport default UserAvatar;\n","import UserDataForm from '../UserDataForm/UserDataForm';\nimport { PaperStyled, UserInformWrapper } from './UserInformation.styled';\nimport UserAvatar from '../UserAvatar/UserAvatar';\nimport { Typography } from '@mui/material';\n\nconst UserInformation = () => {\n  return (\n    <UserInformWrapper>\n      <Typography variant=\"h6\" marginBottom=\"25px\">\n        My information:\n      </Typography>\n      <PaperStyled>\n        <UserAvatar />\n        <UserDataForm />\n      </PaperStyled>\n    </UserInformWrapper>\n  );\n};\n\nexport default UserInformation;\n","import styled from '@emotion/styled';\n\nexport const UserPageWrapper = styled.div(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  [theme.breakpoints.up('desktop')]: {\n    flexDirection: 'row',\n  },\n}));\n","import PetsList from 'components/UserPage/PetsList/PetsList';\nimport UserInformation from 'components/UserPage/UserInformation/UserInformation';\nimport { UserPageWrapper } from 'components/UserPage/UserPage.styled';\n\nconst UserPage = () => {\n  return (\n    <UserPageWrapper>\n      <UserInformation />\n      <PetsList />\n    </UserPageWrapper>\n  );\n};\n\nexport default UserPage;\n"],"names":["PetsListWrapper","styled","_templateObject","_taggedTemplateLiteral","_jsx","children","Typography","variant","UserFormWrapper","FormStyled","_templateObject2","IconButtonStyled","IconButton","p","theme","palette","primary","light","LogoutSpan","_useLogOutUserMutatio","useLogOutUserMutation","logOutUser","_slicedToArray","onBtnLogOutClick","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","unwrap","Notify","t0","message","stop","_jsxs","onClick","LogoutIcon","TextFieldStyled","TextField","_ref","formik","fieldName","_useState","useState","_useState2","focus","setFocus","fieldError","useMemo","errors","iconButtonClick","_ref2","Boolean","abrupt","apply","arguments","Box","display","name","type","disabled","value","values","onChange","handleChange","onBlur","handleBlur","error","touched","helperText","CheckIcon","color","EditIcon","_React$useState","React","dayjs","Date","_React$useState2","setValue","LocalizationProvider","dateAdapter","AdapterDayjs","DesktopDatePicker","label","inputFormat","newValue","format","renderInput","params","_objectSpread","userProfileValidation","Yup","min","max","matches","email","birthdate","phone","city","user","useUser","convertDate","dateString","date","toLocaleString","year","month","day","join","userData","_user$name","_user$email","_user$birthday","birthday","_user$phone","_user$city","handleSubmit","actions","toString","_x","_x2","useFormik","initialValues","enableReinitialize","validationSchema","onSubmit","Object","entries","map","entrie","DateInput","TextInput","LogoutButton","UserInformWrapper","PaperStyled","Paper","flexDirection","alignItems","padding","_defineProperty","breakpoints","up","maxWidth","UserAvatarWrapper","AvatarStyled","Avatar","_templateObject3","EditPhotoSpan","_templateObject4","common","black","alt","src","avatarURL","PhotoCameraIcon","marginBottom","UserAvatar","UserDataForm","UserPageWrapper","UserInformation","PetsList"],"sourceRoot":""}