{"version":3,"file":"static/js/698.5de02f03.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { OutlinedInput } from '@mui/material';\n\nexport const LoginFormStyled = styled.form(({ theme }) => ({\n  width: '280px',\n  position: 'absolute',\n  top: '100px',\n  left: '50%',\n  transform: 'translateX(-50%)',\n  textAlign: 'center',\n  [theme.breakpoints.up('tablet')]: {\n    width: '608px',\n    top: 'calc((100vh - 490px) / 2)',\n    backgroundColor: 'white',\n    boxShadow: '7px 4px 14px rgba(0, 0, 0, 0.11)',\n    borderRadius: '40px',\n    padding: '60px 80px',\n  },\n  [theme.breakpoints.up('desktop')]: {\n    width: '618px',\n  },\n}));\n\nexport const OutlinedInputStyled = styled(OutlinedInput)`\n  border-radius: 30px;\n`;\n","import React from 'react';\nimport { useLogInUserMutation } from 'redux/user/userApi';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport {\n  Button,\n  CircularProgress,\n  FormControl,\n  FormHelperText,\n  IconButton,\n  InputAdornment,\n  Typography,\n} from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { Box } from '@mui/system';\nimport { LoginFormStyled, OutlinedInputStyled } from './LoginForm.styled';\n\nconst validationSchema = Yup.object({\n  email: Yup.string()\n    .email('Invalid email address')\n    .matches(\n      /^([a-zA-Z0-9])+([a-zA-Z0-9._-]+)@[a-zA-Z0-9]+([.-]?[a-zA-Z0-9]+)\\.[a-zA-Z]{2,}$/,\n      'Invalid email address'\n    )\n    .min(10, 'Email must include more tnan 10 characters')\n    .max(63, 'Email must be less tnan 63 characters')\n    .required('This is a required field'),\n  password: Yup.string()\n    .matches(/^[^\\s]+(^\\s.*)?$/, \"Password can't include whitespace\")\n    .min(7, 'Password must include more tnan 7 characters')\n    .max(32, 'Password must be less tnan 32 characters')\n    .required('This is a required field'),\n});\n\nexport const LoginForm = () => {\n  const [logInUser, { isLoading, isFetching }] = useLogInUserMutation();\n  const [showPassword, setShowPassword] = React.useState(false);\n  const navigate = useNavigate();\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const onSubmit = async (values, actions) => {\n    const { email, password } = values;\n\n    try {\n      const { user } = await logInUser({\n        email,\n        password,\n      }).unwrap();\n\n      Notify.success(`Hello, ${user.name}`);\n\n      navigate('/user');\n    } catch (error) {\n      console.log(error);\n      Notify.failure(error.data.message);\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n  });\n\n  return (\n    <>\n      {isLoading || isFetching ? (\n        <Box display=\"flex\" justifyContent=\"center\" marginTop=\"50px\">\n          <CircularProgress color=\"primary\" size={75} />\n        </Box>\n      ) : (\n        <LoginFormStyled onSubmit={formik.handleSubmit}>\n          <Typography variant=\"h3\">Login</Typography>\n          <FormControl sx={{ m: 1, width: '50ch' }} variant=\"outlined\">\n            <OutlinedInputStyled\n              name=\"email\"\n              type=\"text\"\n              placeholder=\"Email\"\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={formik.touched.email && Boolean(formik.errors.email)}\n              aria-describedby=\"component-email-error\"\n            />\n            <FormHelperText id=\"component-email-error\">\n              {formik.errors.email}\n            </FormHelperText>\n          </FormControl>\n          <FormControl\n            sx={{ m: 1, width: '50ch', borderRadius: '20px' }}\n            variant=\"outlined\"\n          >\n            <OutlinedInputStyled\n              name=\"password\"\n              type={showPassword ? 'text' : 'password'}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                    edge=\"end\"\n                  >\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\n                  </IconButton>\n                </InputAdornment>\n              }\n              placeholder=\"Password\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={formik.touched.password && Boolean(formik.errors.password)}\n              aria-describedby=\"component-password-error\"\n            />\n            <FormHelperText id=\"component-password-error\">\n              {formik.errors.password}\n            </FormHelperText>\n          </FormControl>\n          <FormControl sx={{ m: 1, width: '50ch' }}>\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              size=\"large\"\n              sx={{ borderRadius: '20px', width: '100%' }}\n            >\n              Login\n            </Button>\n          </FormControl>\n        </LoginFormStyled>\n      )}\n    </>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <>\n      <LoginForm />\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["LoginFormStyled","styled","_ref","_ref2","theme","width","position","top","left","transform","textAlign","_defineProperty","breakpoints","up","backgroundColor","boxShadow","borderRadius","padding","OutlinedInputStyled","OutlinedInput","_templateObject","_taggedTemplateLiteral","validationSchema","Yup","email","matches","min","max","required","password","LoginForm","_useLogInUserMutation","useLogInUserMutation","_useLogInUserMutation2","_slicedToArray","logInUser","_useLogInUserMutation3","isLoading","isFetching","_React$useState","React","_React$useState2","showPassword","setShowPassword","navigate","useNavigate","onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","actions","_yield$logInUser$unwr","user","wrap","_context","prev","next","unwrap","sent","Notify","concat","name","t0","console","log","data","message","setSubmitting","stop","_x","_x2","apply","arguments","formik","useFormik","initialValues","_jsx","_Fragment","children","Box","display","justifyContent","marginTop","CircularProgress","color","size","_jsxs","handleSubmit","Typography","variant","FormControl","sx","m","type","placeholder","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","FormHelperText","id","endAdornment","InputAdornment","IconButton","onClick","show","onMouseDown","event","preventDefault","edge","VisibilityOff","Visibility","Button"],"sourceRoot":""}